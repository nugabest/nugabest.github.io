

	.wrapper {
		position: relative;

		> .inner {
			@include padding(3em, 4em);

			max-width: 100%;
			width: _size(inner-width);

			@include breakpoint(xlarge) {
				@include padding(3em, 4em);
			}

			@include breakpoint(large) {
				width: 100%;
			}

			@include breakpoint(small) {
				@include padding(4em, 2em);
			}
		}

		&.alt {
			background-color: _palette(bg-alt);
		}

		&.style1 {
			background-color: _palette(accent1);
		}

		&.style1-alt {
			background-color: _palette(accent1-alt);
		}

		&.style2 {
			background-color: _palette(accent2);
		}

		&.style2-alt {
			background-color: _palette(accent2-alt);
		}

		&.style3 {
			background-color: _palette(accent3);
		}

		&.style3-alt {
			background-color: _palette(accent3-alt);
		}

		&.fullscreen {
			@include vendor('display', 'flex');
			@include vendor('flex-direction', 'column');
			//@include vendor('justify-content', 'center');
			min-height: 100vh;

			body.is-ie & {
				height: 100vh;
			}
		}

		&.fade-up {
			> .inner {
				@include vendor('transform', 'translateY(0)');
				@include vendor('transition', (
					'opacity #{_duration(activation)} ease',
					'transform #{_duration(activation)} ease'
				));
				opacity: 1.0;
			}

			&.inactive,
			body.is-loading & {
				> .inner {
					opacity: 0;
					@include vendor('transform', 'translateY(1em)');
				}
			}
		}

		&.fade-down {
			> .inner {
				@include vendor('transform', 'translateY(0)');
				@include vendor('transition', (
					'opacity #{_duration(activation)} ease',
					'transform #{_duration(activation)} ease'
				));
				opacity: 1.0;
			}

			&.inactive,
			body.is-loading & {
				> .inner {
					opacity: 0;
					@include vendor('transform', 'translateY(-1em)');
				}
			}
		}

		&.fade {
			> .inner {
				@include vendor('transition', (
					'opacity #{_duration(activation)} ease'
				));
				opacity: 1.0;
			}

			&.inactive,
			body.is-loading & {
				> .inner {
					opacity: 0;
				}
			}
		}
	}